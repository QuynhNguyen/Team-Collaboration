// Generated by CoffeeScript 1.3.3
(function() {
  var deleteProject, getProjectByName, getProjectList, postProject, projectSchema, restify, server, updateProject;

  restify = require('restify');

  projectSchema = require('./schema/Project.js');

  server = restify.createServer({
    name: "Modern Team Collaboration",
    version: "0.0.1"
  });

  server.use(restify.acceptParser(server.acceptable));

  server.use(restify.queryParser());

  server.use(restify.bodyParser());

  postProject = function(req, res, next) {
    var project, projectName;
    projectName = req.params.name;
    if (projectName != null) {
      project = new projectSchema.Project(projectName);
      return project.save(res);
    } else {
      res.status(404);
      return res.send({
        error: "Invalid Params"
      });
    }
  };

  getProjectList = function(req, res, next) {
    var project;
    project = new projectSchema.Project();
    return project.getProjectList(res);
  };

  getProjectByName = function(req, res, next) {
    var project, projectName;
    projectName = req.params.name;
    project = new projectSchema.Project();
    return project.getProject(res, projectName);
  };

  deleteProject = function(req, res, next) {
    var project, projectID;
    projectID = req.params.id;
    project = new projectSchema.Project();
    return project.deleteProject(res, projectID);
  };

  updateProject = function(req, res, next) {
    var project, projectID, projectName;
    projectID = req.params.id;
    projectName = req.params.name;
    project = new projectSchema.Project();
    return project.updateProject(res, projectID, projectName);
  };

  server.post('/projects', postProject);

  server.get('/projects', getProjectList);

  server.get('/projects/:name', getProjectByName);

  server.del('/projects/:id', deleteProject);

  server.put('/projects/:id', updateProject);

  var port = process.env.PORT || 8080
  server.listen(port, function() {
    return console.log("listening to server " + server.name + ", " + server.url);
  });

}).call(this);
